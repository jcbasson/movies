{"ast":null,"code":"var _jsxFileName = \"/home/jcbasson/Projects/Movies/client/src/routeConfig.js\";\nimport React from \"react\";\nimport Loadable from \"react-loadable\";\nimport Loader from \"./components/loader\"; //TODO: Implement fail safe in case vehicles.json does not exist\n\nconst LoadableMovies = Loadable.Map({\n  loader: {\n    Movies: () => import(\n    /* webpackChunkName: \"movies\" */\n    \"./components/movies\"),\n    config: () => import(\n    /* webpackChunkName: \"moviesConfig\" */\n    \"./components/movies/config.json\")\n  },\n  loading: Loader,\n  delay: 300,\n\n  render(loaded) {\n    const Movies = loaded.Movies.default;\n    const props = loaded.config;\n    return React.createElement(Movies, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }));\n  }\n\n});\nexport const getRoutes = () => [{\n  path: \"/movies\",\n  component: LoadableMovies,\n  exact: true\n}];","map":{"version":3,"sources":["/home/jcbasson/Projects/Movies/client/src/routeConfig.js"],"names":["React","Loadable","Loader","LoadableMovies","Map","loader","Movies","config","loading","delay","render","loaded","default","props","getRoutes","path","component","exact"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;;AACA,MAAMC,cAAc,GAAGF,QAAQ,CAACG,GAAT,CAAa;AAClCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE,MACN;AAAO;AAAP,0BAFI;AAGNC,IAAAA,MAAM,EAAE,MACN;AACE;AADF;AAJI,GAD0B;AASlCC,EAAAA,OAAO,EAAEN,MATyB;AAUlCO,EAAAA,KAAK,EAAE,GAV2B;;AAWlCC,EAAAA,MAAM,CAACC,MAAD,EAAS;AACb,UAAML,MAAM,GAAGK,MAAM,CAACL,MAAP,CAAcM,OAA7B;AACA,UAAMC,KAAK,GAAGF,MAAM,CAACJ,MAArB;AACA,WAAO,oBAAC,MAAD,oBAAYM,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD;;AAfiC,CAAb,CAAvB;AAkBA,OAAO,MAAMC,SAAS,GAAG,MAAM,CAC7B;AACEC,EAAAA,IAAI,EAAE,SADR;AAEEC,EAAAA,SAAS,EAAEb,cAFb;AAGEc,EAAAA,KAAK,EAAE;AAHT,CAD6B,CAAxB","sourcesContent":["import React from \"react\";\nimport Loadable from \"react-loadable\";\nimport Loader from \"./components/loader\";\n\n//TODO: Implement fail safe in case vehicles.json does not exist\nconst LoadableMovies = Loadable.Map({\n  loader: {\n    Movies: () =>\n      import(/* webpackChunkName: \"movies\" */ `./components/movies`),\n    config: () =>\n      import(\n        /* webpackChunkName: \"moviesConfig\" */ `./components/movies/config.json`\n      )\n  },\n  loading: Loader,\n  delay: 300,\n  render(loaded) {\n    const Movies = loaded.Movies.default;\n    const props = loaded.config;\n    return <Movies {...props} />;\n  }\n});\n\nexport const getRoutes = () => [\n  {\n    path: \"/movies\",\n    component: LoadableMovies,\n    exact: true\n  }\n];\n"]},"metadata":{},"sourceType":"module"}