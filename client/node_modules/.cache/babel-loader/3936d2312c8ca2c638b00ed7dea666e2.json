{"ast":null,"code":"var _jsxFileName = \"/home/jcbasson/Projects/Movies/client/src/components/movies/components/movieList/MovieList.tsx\";\nimport React from \"react\";\nimport isEmpty from \"lodash/isEmpty\";\nimport get from \"lodash/get\";\nimport { Layout } from \"./styled\";\nimport MovieItem from \"../movieItem\";\n\nconst MovieList = ({\n  movies\n}) => {\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, !isEmpty(movies) && movies.map(movie => React.createElement(MovieItem, {\n    imdbID: get(movie, \"imdbID\", \"\"),\n    title: get(movie, \"Title\", \"\"),\n    year: get(movie, \"Year\", \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })));\n};\n\nexport default MovieList;","map":{"version":3,"sources":["/home/jcbasson/Projects/Movies/client/src/components/movies/components/movieList/MovieList.tsx"],"names":["React","isEmpty","get","Layout","MovieItem","MovieList","movies","map","movie"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,OAAOC,SAAP,MAAsB,cAAtB;;AAMA,MAAMC,SAA+B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AACtD,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACL,OAAO,CAACK,MAAD,CAAR,IACCA,MAAM,CAACC,GAAP,CAAWC,KAAK,IACd,oBAAC,SAAD;AACE,IAAA,MAAM,EAAEN,GAAG,CAACM,KAAD,EAAQ,QAAR,EAAkB,EAAlB,CADb;AAEE,IAAA,KAAK,EAAEN,GAAG,CAACM,KAAD,EAAQ,OAAR,EAAiB,EAAjB,CAFZ;AAGE,IAAA,IAAI,EAAEN,GAAG,CAACM,KAAD,EAAQ,MAAR,EAAgB,EAAhB,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CADF;AAYD,CAbD;;AAeA,eAAeH,SAAf","sourcesContent":["import React from \"react\";\nimport isEmpty from \"lodash/isEmpty\";\nimport get from \"lodash/get\";\nimport { Layout } from \"./styled\";\nimport { IMovieData } from \"../../types\";\nimport MovieItem from \"../movieItem\";\n\ninterface IMovieList {\n  movies: Pick<IMovieData, \"imdbID\" | \"Title\" | \"Year\">[];\n}\n\nconst MovieList: React.FC<IMovieList> = ({ movies }) => {\n  return (\n    <Layout>\n      {!isEmpty(movies) &&\n        movies.map(movie => (\n          <MovieItem\n            imdbID={get(movie, \"imdbID\", \"\")}\n            title={get(movie, \"Title\", \"\")}\n            year={get(movie, \"Year\", \"\")}\n          />\n        ))}\n    </Layout>\n  );\n};\n\nexport default MovieList;\n"]},"metadata":{},"sourceType":"module"}