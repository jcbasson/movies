{"ast":null,"code":"var _jsxFileName = \"/home/jcbasson/Projects/Movies/client/src/components/movies/Movies.tsx\";\nimport * as React from \"react\";\nimport { isNil, isEmpty } from \"lodash\";\nimport { useSelector } from \"react-redux\";\nimport { Layout, LeftColumn, RightColumn, Content } from \"./styled\";\nimport MoviesList from \"./components/movieList\";\nimport MovieSearchBar from \"./components/movieSearchBar\";\nimport MoviePager from \"./components/moviePager\";\nimport MovieInfo from \"./components/movieInfo\";\nimport { movieIdSelector } from \"./selectors\";\n\nconst Movies = props => {\n  const selectedId = useSelector(state => movieIdSelector(state));\n  const hasMovieSelected = isNil(selectedId) || isEmpty(selectedId);\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(LeftColumn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(MovieSearchBar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }), React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(MoviesList, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }))), React.createElement(MoviePager, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  })), React.createElement(RightColumn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, selectedId && React.createElement(MovieInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })));\n};\n\nexport default Movies;","map":{"version":3,"sources":["/home/jcbasson/Projects/Movies/client/src/components/movies/Movies.tsx"],"names":["React","isNil","isEmpty","useSelector","Layout","LeftColumn","RightColumn","Content","MoviesList","MovieSearchBar","MoviePager","MovieInfo","movieIdSelector","Movies","props","selectedId","state","hasMovieSelected"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT,EAAgBC,OAAhB,QAA+B,QAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,UAAjB,EAA6BC,WAA7B,EAA0CC,OAA1C,QAAyD,UAAzD;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,SAASC,eAAT,QAAgC,aAAhC;;AAOA,MAAMC,MAAyB,GAAGC,KAAK,IAAI;AACzC,QAAMC,UAAU,GAAGZ,WAAW,CAAEa,KAAD,IAAmBJ,eAAe,CAACI,KAAD,CAAnC,CAA9B;AACA,QAAMC,gBAAgB,GAAGhB,KAAK,CAACc,UAAD,CAAL,IAAqBb,OAAO,CAACa,UAAD,CAArD;AACA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD,oBAAgBD,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAFF,EAKE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,EAQE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcC,UAAU,IAAI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5B,CARF,CADF;AAYD,CAfD;;AAiBA,eAAeF,MAAf","sourcesContent":["import * as React from \"react\";\nimport { isNil, isEmpty } from \"lodash\";\nimport { useSelector } from \"react-redux\";\nimport { Layout, LeftColumn, RightColumn, Content } from \"./styled\";\nimport MoviesList from \"./components/movieList\";\nimport MovieSearchBar from \"./components/movieSearchBar\";\nimport MoviePager from \"./components/moviePager\";\nimport MovieInfo from \"./components/movieInfo\";\nimport { IState } from \"./types\";\nimport { movieIdSelector } from \"./selectors\";\n\ninterface IMovies {\n  defaultMovieTitle?: string;\n  defaultPage?: number;\n}\n\nconst Movies: React.FC<IMovies> = props => {\n  const selectedId = useSelector((state: IState) => movieIdSelector(state));\n  const hasMovieSelected = isNil(selectedId) || isEmpty(selectedId);\n  return (\n    <Layout>\n      <LeftColumn>\n        <MovieSearchBar></MovieSearchBar>\n        <Content>\n          <MoviesList {...props} />\n        </Content>\n        <MoviePager />\n      </LeftColumn>\n      <RightColumn>{selectedId && <MovieInfo></MovieInfo>}</RightColumn>\n    </Layout>\n  );\n};\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}