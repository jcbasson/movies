{"ast":null,"code":"import _defineProperty from \"/home/jcbasson/Projects/Movies/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { SET_SELECTED_MOVIE_ID, SET_SEARCHED_MOVIE_TITLE, SET_MOVIES_PAGE_NUMBER } from \"./actions\";\n// const defaultState = {\n//   selectedId: \"tt0372784\",\n//   searchedTitle: \"Batman\",\n//   page: 1\n// };\nexport const moviesReducer = (state = {}, action) => {\n  switch (action.type) {\n    case SET_SELECTED_MOVIE_ID:\n      return _objectSpread({}, state, {\n        selectedId: action.id\n      });\n\n    case SET_SEARCHED_MOVIE_TITLE:\n      return _objectSpread({}, state, {\n        searchedTitle: action.title\n      });\n\n    case SET_MOVIES_PAGE_NUMBER:\n      return _objectSpread({}, state, {\n        page: action.page\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/home/jcbasson/Projects/Movies/client/src/components/movies/reducers.ts"],"names":["SET_SELECTED_MOVIE_ID","SET_SEARCHED_MOVIE_TITLE","SET_MOVIES_PAGE_NUMBER","moviesReducer","state","action","type","selectedId","id","searchedTitle","title","page"],"mappings":";;;;;;AAAA,SACEA,qBADF,EAEEC,wBAFF,EAGEC,sBAHF,QAIO,WAJP;AAOA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAA6B;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,qBAAL;AACE,+BAAYI,KAAZ;AAAmBG,QAAAA,UAAU,EAAEF,MAAM,CAACG;AAAtC;;AACF,SAAKP,wBAAL;AACE,+BAAYG,KAAZ;AAAmBK,QAAAA,aAAa,EAAEJ,MAAM,CAACK;AAAzC;;AACF,SAAKR,sBAAL;AACE,+BAAYE,KAAZ;AAAmBO,QAAAA,IAAI,EAAEN,MAAM,CAACM;AAAhC;;AACF;AACE,aAAOP,KAAP;AARJ;AAUD,CAXM","sourcesContent":["import {\n  SET_SELECTED_MOVIE_ID,\n  SET_SEARCHED_MOVIE_TITLE,\n  SET_MOVIES_PAGE_NUMBER\n} from \"./actions\";\nimport { IState } from \"./types\";\n\n// const defaultState = {\n//   selectedId: \"tt0372784\",\n//   searchedTitle: \"Batman\",\n//   page: 1\n// };\n\nexport const moviesReducer = (state = {}, action: any) => {\n  switch (action.type) {\n    case SET_SELECTED_MOVIE_ID:\n      return { ...state, selectedId: action.id };\n    case SET_SEARCHED_MOVIE_TITLE:\n      return { ...state, searchedTitle: action.title };\n    case SET_MOVIES_PAGE_NUMBER:\n      return { ...state, page: action.page };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}